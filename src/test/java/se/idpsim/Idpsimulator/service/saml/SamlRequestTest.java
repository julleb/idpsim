package se.idpsim.Idpsimulator.service.saml;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

import org.junit.jupiter.api.Test;

class SamlRequestTest {

    @Test
    void createSamlRequest_fromString_whenBadSamlRequest() {
        var builder = SamlRequest.fromString();

        assertThrows(IllegalArgumentException.class, () -> builder.encodedSamlRequest("bad")
            .build());

        assertThrows(IllegalArgumentException.class, () -> builder.encodedSamlRequest("").build());
        assertThrows(IllegalArgumentException.class, () -> builder.encodedSamlRequest(null).build());
    }

    @Test
    void createSamlRequest_fromString_whenOkSamlRequest() {
        String samlRequest = "PHNhbWxwOkF1dGhuUmVxdWVzdCB4bWxuczpzYW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIiBBc3NlcnRpb25Db25zdW1lclNlcnZpY2VVUkw9Imh0dHBzOi8vc3NvLnNrYXR0ZXZlcmtldC5zZS9zYW1sL3NwL3Byb2ZpbGUvcG9zdC9hY3MiIERlc3RpbmF0aW9uPSJodHRwczovL20wMC1tZy1sb2NhbC5hdXRoLmZ1bmt0aW9uc3RqYW5zdGVyLnNlL3NhbWx2Mi9pZHAvcmVxLzYvMT9tZ3Zob3N0cGFyYW09NiIgSUQ9Il8xZWM5OGI2ZjA2ZDYwOWU1ZjVjMDViZDMwM2E3MDI3M2MxZDhhOCIgSXNzdWVJbnN0YW50PSIyMDI1LTA4LTI4VDE4OjI3OjIyLjAwMloiIEZvcmNlQXV0aG49InRydWUiIFByb3RvY29sQmluZGluZz0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmJpbmRpbmdzOkhUVFAtUE9TVCIgVmVyc2lvbj0iMi4wIj48c2FtbDpJc3N1ZXIgeG1sbnM6c2FtbD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiI+aHR0cHM6Ly9zc28uc2thdHRldmVya2V0LnNlL2NnaTwvc2FtbDpJc3N1ZXI+PGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+PGRzOlNpZ25lZEluZm8geG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxkczpDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PGRzOlNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZHNpZy1tb3JlI3JzYS1zaGEyNTYiLz48ZHM6UmVmZXJlbmNlIFVSST0iI18xZWM5OGI2ZjA2ZDYwOWU1ZjVjMDViZDMwM2E3MDI3M2MxZDhhOCI+PGRzOlRyYW5zZm9ybXM+PGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIi8+PGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyI+PGVjOkluY2x1c2l2ZU5hbWVzcGFjZXMgeG1sbnM6ZWM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIgUHJlZml4TGlzdD0ieHMiLz48L2RzOlRyYW5zZm9ybT48L2RzOlRyYW5zZm9ybXM+PGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMDQveG1sZW5jI3NoYTI1NiIvPjxkczpEaWdlc3RWYWx1ZT41K00vNEovRUdEQmt5dXZyRHpJQTRnSTk2cm1NcU9hcmJldHRpeVJaSWo4PTwvZHM6RGlnZXN0VmFsdWU+PC9kczpSZWZlcmVuY2U+PC9kczpTaWduZWRJbmZvPjxkczpTaWduYXR1cmVWYWx1ZT5KRHkwMjFtcXAzSExtc2NXL2dVY1VNeDJUV1ZVa2JXbS9waVF0eC82T2NHa2lrZHpqaEdKRGp5d2o2SDZjcS8yaDY0NzM1WGQ5SGFhWjlQMXllcHBYUCtybnd4bzUyL2RkdkhwcFFFUWFjakV1aE84L25FeDB1dmNHR2FmNVNzL21zdUF1eVFGd0tQeFJQd2hkczlUZW9BK2JGNklxeWprYnlMODA3V1gycGVvN2FpcE1VZkcyS2ZJc3M1d0U4SEkvTDhFcld6MjUrcVNyc3RDV0JGbGp0YkFpNTQ0OE5IM25pWjg5aWdlVGZXaXY3ZjJUUjRTci9WVUJWZFRCeUJseFB6L1MwSEdRMUpHa3doRDY3eXZTTGd5VGx6WHZaMFF3U0h0V2d6akw5WGhFZGFsbEM3SG1IbVRtWjMwRmFxeHJ4amxiN01CbmkwNGlUbXRBdyt5VlE9PTwvZHM6U2lnbmF0dXJlVmFsdWU+PGRzOktleUluZm8+PGRzOlg1MDlEYXRhPjxkczpYNTA5Q2VydGlmaWNhdGU+TUlJRm16Q0NBNE9nQXdJQkFnSUNJQUF3RFFZSktvWklodmNOQVFFTEJRQXdRVEVMTUFrR0ExVUVCaE1DVTBVeApGREFTQmdOVkJBb1RDMFY0Y0dsemIyWjBJRUZDTVJ3d0dnWURWUVFERXhORmVIQnBWSEoxYzNRZ1JVbEVJRU5CCklIWTBNQjRYRFRJMU1ERXhNekV4TVRReU5Wb1hEVEkzTURNeE1ERXlNVEEwTUZvd1d6RUxNQWtHQTFVRUJoTUMKVTBVeEZUQVRCZ05WQkFvVERGTnJZWFIwWlhabGNtdGxkREUxTUJNR0ExVUVCUk1NTVRZeU1ESXhNREExTkRRNApNQjRHQTFVRUF4TVhVMnRoZEhSbGRtVnlhMlYwSUVabFpHVnlZWFJwYjI0d2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQklvZjRrdHo3UDZxdE9Cd3JLb2lzZnhjdXlXWUcyMm1ZdFVHRDBQMzkKelRiZTJqb2hUbVh0T0JleVBqK0I2bm05SFpaWmYvTTBQdCtoT2hRVDF1NiswbzZkdE52RHprR0pDQ1FNTHNXOApBUHJYVlZjeFgzQnBuMU0rb3dhU01GbFJRMjZtYkhRNmYwQTI4UTJ1Y3VGNVJ4RytRNmJkNkhMQWgzUjdYTzhWCk9DbnlWY0gzQUVPZmNINWxRYzI0WHNVYTBoYm5oVUxwL1NETVdUbnVxYzJidGlJNDEweEZWaXJuWkptamRPOGYKaVVMS1F5WXE5UWl4RlJIVDBZL0JaLzFXdFRSWmRkM2puRjhTaFlJMzdTU0E2UHV3a3VmbkJ4YzNWUGZjRDY0MQptNHRtTmppeTRmT2liZnpSVUlLMit0K1RqSHAreEt1VkMwTHFuVW5TZ2RkTEFnTUJBQUdqZ2dHQk1JSUJmVEFmCkJnTlZIU01FR0RBV2dCUkdZSVVheXAzQUExOTlzaURYUTQzQmVpNzFoakFkQmdOVkhRNEVGZ1FVeFVjMHEwaHAKdFZjYzlyM2VJS1pRZ3Njd0tNZ3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CNEdBMVVkRVFRWE1CV0JFM0JyYVVCegphMkYwZEdWMlpYSnJaWFF1YzJVd0ZRWURWUjBnQkE0d0REQUtCZ2dxaFhBMkNRSU5BekFkQmdOVkhTVUVGakFVCkJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdnWnNHQTFVZEh3U0JrekNCa0RCR29FU2dRb1pBYUhSMGNEb3YKTDJOa2NESXVZMlZ5ZEhObGNuWnBZMlV1YzJVdlkyUndMMlZwWkM5RmVIQnBWSEoxYzNRbE1qQkZTVVFsTWpCRApRU1V5TUhZMExtTnliREJHb0VTZ1FvWkFhSFIwY0RvdkwyTmtjREV1WTJWeWRITmxjblpwWTJVdWMyVXZZMlJ3CkwyVnBaQzlGZUhCcFZISjFjM1FsTWpCRlNVUWxNakJEUVNVeU1IWTBMbU55YkRBM0JnZ3JCZ0VGQlFjQkFRUXIKTUNrd0p3WUlLd1lCQlFVSE1BR0dHMmgwZEhBNkx5OXZZM053TG1ObGNuUnpaWEoyYVdObExuTmxMekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQWdFQUljb0JDWDJvdEFGd0ZNM2RqNSs5Ykd0Z0ptelpxc05ZN294bjdTTEU0dGFEClhxQ0ZCWEQ5NlREZ1Z3dk5RZXdoUGllRnNNOFhOWCt6VUpnWHRVbTE5U1BwNjRCUDRzMmlTUTQzTTJ0aWNNVDcKUnphSHE2NEJ5dXp5bkQ1NEpKVmlJSDhMckJkYjZETk5XQzJTbnhGRDB3NVpBU2VYay9VcGhyYWVNckxibVJUdApJNU9zZ0l2bXNFazZCRHAvdDl5VHZ4WTZ4bnMyWEtuaHhkbUtiVnliTTdJcis0Ny9iZUxZeDdJUzI0UTlZRDhwCkdtSVpubjZaaG1hK0tZT1VENG1LVGg0cEVBTWxFMGVuNXhtdm90T2xtV3VWTXllVm13Y1hNMjZZQU5ncG9TaHoKR0xERGpVL0V6MGVoeUpDQUxkNEJmTWZTOVJIZ2FpWEFvcWhVS2ZKMlRrbTBteWw5bmp6UnUydTFVKzkrZkJ4MQp6V1Qyc2NMc0RNcmFRektTaG9OT3JWQitXSVRFMGZEZHZLTmpSYnF5b0pFYnpXVnNzWkR4dUhiVklPWmxhb00rCkQ0WlRCdVBXVkxmbTRPY3BZN0luQWdrYXpuaG1EdElBcEhETEhOdjZaUUZZVkhvd29WYTF3RVNIMFIvSEdNR3oKOGFPaVN2N1FqOVNiNkhUaDRMR1p0d3h0R3pSSzR3OG9Uak5aMDB5b3pYUFlvQWtNVEZOMEZDRVV5WE5KZTBCSApKVHVrTC9XMXdZVS9PVyt4alVFNW0xRnlYN2k4NVZLL29PM25tM3QyZ0h3dWZ2UGxNaGh3Nkh0eXZvcDVaZTU2CjFqR0xrbWFEV2JGNFF5Y2Vxaklob2cwUHV3SVA0a1RNL0M5MlA3czBGQUFEVUlBQzhqbUlRUlAzZXIzblBWbz08L2RzOlg1MDlDZXJ0aWZpY2F0ZT48L2RzOlg1MDlEYXRhPjwvZHM6S2V5SW5mbz48L2RzOlNpZ25hdHVyZT48c2FtbHA6TmFtZUlEUG9saWN5IEFsbG93Q3JlYXRlPSJ0cnVlIi8+PC9zYW1scDpBdXRoblJlcXVlc3Q+";

        SamlRequest samlReq = SamlRequest.fromString()
            .encodedSamlRequest(samlRequest)
            .build();

        assertEquals("https://sso.skatteverket.se/cgi", samlReq.getIssuer());
        assertEquals("https://sso.skatteverket.se/saml/sp/profile/post/acs",
            samlReq.getAssertionConsumerServiceUrl());
        assertEquals("_1ec98b6f06d609e5f5c05bd303a70273c1d8a8", samlReq.getId());
    }
}
